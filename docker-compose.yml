version: "3.9"
services:
  frontend:
    image: nginx:1.21.1
    container_name: frontend
    restart: always
    volumes:
      - ./frontend:/usr/share/nginx/html
      - ./backend:/backend
    ports:
      - "80:80"
    depends_on:
      - backend
    links:
      - backend
  postgres:
    image: postgres:13.4
    restart: always
    container_name: db
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - PGDATA=/var/lib/postgresql/data/pgdata
    volumes:
      - ./postgres:/var/lib/postgresql/data
  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
    ports:
      - "5050:80"
    expose:
      - "5050"
  backend:
    build: .
    container_name: backend
    restart: always
    environment:
      - DB_ENGINE=${DBENGINE}
      - DB_NAME=${DB_NAME}
      - DB_USER=${POSTGRES_USER}
      - DB_PASSWORD=${POSTGRES_PASSWORD}
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - PRODUCTION_MODE=${PRODUCTION_MODE}
    command: bash -c "python3 manage.py collectstatic --no-input && python3 manage.py makemigrations && python3 manage.py migrate && gunicorn challenge.wsgi:application -c gunicorn_start.sh"
    volumes:
      - ./backend:/backend
    expose:
      - "8443"
    ports:
      - "8443:8443"
    links:
      - postgres
